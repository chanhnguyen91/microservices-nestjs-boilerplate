version: "3.8"
services:
  mysql:
    image: mysql:8.0
    ports:
      - "3316:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: auth_db
    # command: --default-authentication-plugin=mysql_native_password
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7.0
    ports:
      - "6389:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5972:5672"
      - "19672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5

  # jaeger:
  #   image: jaegertracing/all-in-one:latest
  #   ports:
  #     - "16686:16686"
  #     - "14268:14268"
  #     - "14250:14250"
  #   environment:
  #     - SPAN_STORAGE_TYPE=elasticsearch
  #     - ES_SERVER_URLS=http://elasticsearch:9200
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD", "wget", "--spider", "http://localhost:16686"]
  #     interval: 10s
  #     retries: 5

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.8.0
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #   ports:
  #     - "9200:9200"
  #   volumes:
  #     - es-data:/usr/share/elasticsearch/data
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9200"]
  #     interval: 10s
  #     retries: 5

  # logstash:
  #   image: docker.elastic.co/logstash/logstash:8.8.0
  #   ports:
  #     - "5044:5044"
  #   volumes:
  #     - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9600"]
  #     interval: 10s
  #     retries: 5

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.8.0
  #   ports:
  #     - "5601:5601"
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   depends_on:
  #     - elasticsearch
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:5601"]
  #     interval: 10s
  #     retries: 5

  # prometheus:
  #   image: prom/prometheus:latest
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD", "wget", "--spider", "http://localhost:9090"]
  #     interval: 10s
  #     retries: 5

  # grafana:
  #   image: grafana/grafana:latest
  #   ports:
  #     - "3003:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_USER=admin
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:3000"]
  #     interval: 10s
  #     retries: 5

volumes:
  mysql-data:
  redis-data:
  rabbitmq-data:
  # es-data:
  # grafana-data:

networks:
  app-network:
    driver: bridge
